plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.meditrack'
version = '0.0.1-SNAPSHOT'
description = 'Demo Project Meditrack'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootRun {
    jvmArgs = [
            "-Duser.timezone=UTC"
    ]
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.flywaydb:flyway-database-postgresql"
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // For JWT  based authentication of users
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // For Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    // To store and retrieve a json object from Postgres DB
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.5.1'

    // For generating PDFs for prescriptions
    implementation 'com.github.librepdf:openpdf:1.3.39'

    // For sending emails via Gmail SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // For Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'




}

tasks.named('test') {
	useJUnitPlatform()
}
